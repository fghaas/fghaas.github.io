<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>xahteiwi.eu - Python</title><link>https://xahteiwi.eu/</link><description></description><lastBuildDate>Sun, 26 Jun 2022 20:00:00 +0000</lastBuildDate><item><title>Python package dependency checking in a CI pipeline with pipdeptree</title><link>https://xahteiwi.eu/resources/hints-and-kinks/pipdeptree-ci/</link><description>&lt;p&gt;Sometimes pip behaves rather oddly when it comes to package dependency resolution. Here’s one way to catch such issues in your CI pipeline.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Haas</dc:creator><pubDate>Sun, 26 Jun 2022 20:00:00 +0000</pubDate><guid isPermaLink="false">tag:xahteiwi.eu,2022-06-26:/resources/hints-and-kinks/pipdeptree-ci/</guid><category>hints-and-kinks</category><category>Python</category><category>CI</category></item><item><title>Universal tox tests (from just about any CI)</title><link>https://xahteiwi.eu/resources/hints-and-kinks/universal-tox-tests/</link><description>&lt;p&gt;I like tox. A lot. I use it all the time. This is a quick summary on how to use it in such a way that it becomes a central anchor point that you can use from all your CI systems.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Haas</dc:creator><pubDate>Sun, 17 Oct 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:xahteiwi.eu,2021-10-17:/resources/hints-and-kinks/universal-tox-tests/</guid><category>hints-and-kinks</category><category>CI</category><category>Python</category><category>GitLab</category><category>GitHub</category><category>Zuul</category></item><item><title>What I now know about HAproxied Django database connections, and wish I'd known sooner</title><link>https://xahteiwi.eu/resources/presentations/what-i-now-know-about-haproxied-django-database-connections-and-wish-id-known-sooner/</link><description>&lt;p&gt;My talk from PyConline AU 2020.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Haas</dc:creator><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:xahteiwi.eu,2020-09-08:/resources/presentations/what-i-now-know-about-haproxied-django-database-connections-and-wish-id-known-sooner/</guid><category>presentations</category><category>Conference</category><category>Python</category></item><item><title>Celery to Chew On</title><link>https://xahteiwi.eu/resources/hints-and-kinks/chewy-celery/</link><description>&lt;p&gt;Asynchronous Celery tasks that manipulate a MySQL/Galera database from a Django application can produce very interesting behavior when HAProxy is involved.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Haas</dc:creator><pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:xahteiwi.eu,2020-05-06:/resources/hints-and-kinks/chewy-celery/</guid><category>hints-and-kinks</category><category>Django</category><category>MySQL</category><category>HAProxy</category><category>Celery</category><category>Python</category></item><item><title>Configuring CLI output verbosity with logging and argparse</title><link>https://xahteiwi.eu/resources/hints-and-kinks/python-cli-logging-options/</link><description>&lt;p&gt;Command-line interfaces frequently produce output whose verbosity your users may want to be able to tweak. Here’s a nifty way to do that.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Haas</dc:creator><pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:xahteiwi.eu,2019-05-01:/resources/hints-and-kinks/python-cli-logging-options/</guid><category>hints-and-kinks</category><category>Python</category></item><item><title>Using coverage with multiple parallel GitLab CI jobs</title><link>https://xahteiwi.eu/resources/hints-and-kinks/coverage-gitlab-ci/</link><description>&lt;p&gt;If you ever write unit tests in Python, you are probably familiar with Ned Batchelder’s &lt;code&gt;coverage&lt;/code&gt; tool. This article explains how you can use &lt;code&gt;coverage&lt;/code&gt; in combination with &lt;code&gt;tox&lt;/code&gt; and a GitLab CI pipeline, for coverage reports in your Python code.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Haas</dc:creator><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:xahteiwi.eu,2019-03-10:/resources/hints-and-kinks/coverage-gitlab-ci/</guid><category>hints-and-kinks</category><category>Python</category><category>CI</category><category>GitLab</category></item><item><title>Building a nested CLI parser from a dictionary</title><link>https://xahteiwi.eu/resources/hints-and-kinks/python-argparse-from-dictionary/</link><description>&lt;p&gt;Here’s a nice way to initialize a CLI argument parser in Python, with arbitrary levels of subcommands.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Haas</dc:creator><pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:xahteiwi.eu,2019-03-09:/resources/hints-and-kinks/python-argparse-from-dictionary/</guid><category>hints-and-kinks</category><category>Python</category></item><item><title>A Python one-liner for pretty-printing radosgw utilization</title><link>https://xahteiwi.eu/resources/hints-and-kinks/radosgw-utilization-one-liner/</link><description>&lt;p&gt;In case you need a quick overview of how many radosgw objects live in your Ceph cluster, here‘s how you do that in one (slightly involved) line of Python.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Haas</dc:creator><pubDate>Thu, 17 Dec 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:xahteiwi.eu,2015-12-17:/resources/hints-and-kinks/radosgw-utilization-one-liner/</guid><category>hints-and-kinks</category><category>Ceph</category><category>Python</category></item></channel></rss>